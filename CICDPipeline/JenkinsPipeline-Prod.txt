pipeline {
    agent any

    tools {
        nodejs 'node21'
    }
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    
    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', credentialsId: 'git-cred', url: 'https://github.com/PraneethChitturi/YelpCamp-CICD.git'
            }
        }
        
        stage('Install Package Dependencies') {
            steps {
                sh "npm install"
            }
        }
        
        stage('Unit Tests') {
            steps {
                sh "npm test"
            }
        }
        
        stage('Trivy FS Scan') {
            steps {
                sh "trivy fs --format table -o fs-report.html ."
            }
        }
        
        stage('SonarQube') {
            steps {
                withSonarQubeEnv('sonar') {
         sh "$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectKey=Campground -Dsonar.projectName=Campground"
}
                
            }
        }
        
        stage('Docker Build & Tag') {
            steps {
               script{
                   withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
    sh "docker build -t praneethchitturi123/yelpcampa:latest ."
}
               } 
            }
        }
        
        stage('Trivy Image Scan') {
            steps {
                sh "trivy image --format table -o img-report.html praneethchitturi123/yelpcampa:latest"
            }
        }
        
        stage('Docker Push Image') {
            steps {
               script{
                   withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
    sh "docker push praneethchitturi123/yelpcampa:latest"
}
               } 
            }
        }
        
        stage('Docker Deploy to Dev') {
            steps {
               script{
                   withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
    sh "docker run -d -p 3510:3510 praneethchitturi123/yelpcampa:latest"
}
               } 
            }
        }
        
       stage('Deply to EKS') {
            steps { withKubeCredentials(kubectlCredentials: [[caCertificate: '', clusterName: 'EKS-5', contextName: '', credentialsId: 'k8-token', namespace: 'webapps', serverUrl: 'https://1D7B460D7C2F6CF1D45673CE55DD787F.gr7.us-east-1.eks.amazonaws.com']]) {
     sh "kubectl apply -f Manifests/dss.yml"
     sleep 60
}}}

stage('Verify the Deployment') {
            steps { withKubeCredentials(kubectlCredentials: [[caCertificate: '', clusterName: 'EKS-5', contextName: '', credentialsId: 'k8-token', namespace: 'webapps', serverUrl: 'https://1D7B460D7C2F6CF1D45673CE55DD787F.gr7.us-east-1.eks.amazonaws.com']]) {
     sh "kubectl get pods -n webapps"
     sh "kubectl get svc -n webapps"
}}}
    
}}
